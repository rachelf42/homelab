########## FRAGMENTS
x-defaults-nonet: &defaults-nonet
  extends:
    file: ./common.compose.yaml
    service: base-nonet
x-defaults: &defaults
  extends:
    file: ./common.compose.yaml
    service: base
########## STACK SETTINGS
name: control
networks:
  auth: {}
  main:
    name: main
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.69.0/24
########## SERVICES
services:
#################### MONITORS
  dozzle:
    extends:
      file: ./common.compose.yaml
      service: dozzle-agent
    depends_on: {traefik: {condition: service_started}}
    environment: {DOZZLE_REMOTE_AGENT: jenkins.local.rachelf42.ca:7007}
    ports: !reset []
    command: !reset null
    labels:
      traefik.enable: true
      traefik.http.routers.dozzle.tls: true
      traefik.http.routers.dozzle.tls.certresolver: cloudflare
      traefik.http.routers.dozzle.entrypoints: websecure
      traefik.http.routers.dozzle.rule: Host(`dozzle.local.rachelf42.ca`)
      # traefik.http.routers.dozzle.middlewares: authelia@file
      traefik.http.services.dozzle-control.loadbalancer.server.port: 8080
  traefik:
    <<: *defaults-nonet
    image: traefik:v3.4.1@sha256:cd40ab7bc1f047731d5b22595203812343efcb6538014c4e93221cfc3a77217a
    volumes:
      # for listening to container creation/deletion events
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # static configuration file
      - ./config/traefik.yaml:/etc/traefik/traefik.yaml:ro
      # dynamic configuration files in this dir
      - ./config/traefik:/config:ro
      # certificate storage
      - $APPDIR/traefik/certs/acme.json:/acme.json
    secrets: [cf-token]
    environment: {CF_DNS_API_TOKEN_FILE: /run/secrets/cf-token}
    env_file: ./secrets/traefik-acme-email
    ports:
      - '80:80'
      - '81:8080'
      - '443:443'
    networks:
      auth: {}
      main: {ipv4_address: 192.168.69.69}
    healthcheck: !reset {}
    labels:
      traefik.enable: true
      traefik.http.routers.dashboard.tls: true
      traefik.http.routers.dashboard.tls.certresolver: cloudflare
      traefik.http.routers.dashboard.tls.domains[0].main: local.rachelf42.ca
      traefik.http.routers.dashboard.tls.domains[0].sans: '*.local.rachelf42.ca'
      traefik.http.routers.dashboard.entrypoints: websecure
      traefik.http.routers.dashboard.rule: Host(`traefik.local.rachelf42.ca`)
      traefik.http.routers.dashboard.service: api@internal
  # TODO: move all services below this point to nas
  # Issue URL: https://github.com/rachelf42/homelab/issues/61
  # and will need to reopen ports on control's containers
  # unless we do a tcp proxy thing
  # labels: waiting, hideFromCodeEditor
  kuma:
    <<: *defaults
    image: louislam/uptime-kuma:1.23.16@sha256:431fee3be822b04861cf0e35daf4beef6b7cb37391c5f26c3ad6e12ce280fe18
    depends_on:
      traefik: {condition: service_started}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - $APPDIR/kuma:/app/data
    labels:
      traefik.enable: true
      traefik.http.routers.kuma.tls: true
      traefik.http.routers.kuma.tls.certresolver: cloudflare
      traefik.http.routers.kuma.entrypoints: websecure
      traefik.http.routers.kuma.rule: Host(`kuma.local.rachelf42.ca`)
  ddclient:
    <<: *defaults
    image: lscr.io/linuxserver/ddclient:4.0.0@sha256:ab657501e876361a84b488713f0332190fe5c2a9fe897a78452b2e98a8e6c97b
    volumes: [./config/ddclient.conf:/config/ddclient.conf]
    secrets: [cf-token]
    environment:
      PUID: $UID
      PGID: $GID
      TZ: $TZ
      FILE__CLOUDFLARE_TOKEN: /run/secrets/cf-token
    healthcheck: !reset {}
  myspeed:
    <<: *defaults
    image: germannewsmaker/myspeed:1.0.9@sha256:3a3e774b3f78d930a5a962d625b99bcb3d71730bfeb4a6b93e04fd38cfe7d9a9
    depends_on: {traefik: {condition: service_started}}
    volumes: [$APPDIR/myspeed:/myspeed/data]
    healthcheck: !reset {}
    labels:
      traefik.enable: true
      traefik.http.routers.myspeed.tls: true
      traefik.http.routers.myspeed.tls.certresolver: cloudflare
      traefik.http.routers.myspeed.entrypoints: websecure
      traefik.http.routers.myspeed.rule: Host(`myspeed.local.rachelf42.ca`)
#################### AUTHENTICATION
  postgres:
    <<: *defaults-nonet
    image: postgres:17.5@sha256:6efd0df010dc3cb40d5e33e3ef84acecc5e73161bd3df06029ee8698e5e12c60
    volumes:
      - $APPDIR/postgres:/var/lib/postgresql/data
      - ./config/psql-createdb.sh:/docker-entrypoint-initdb.d/psq-createdb.sh:ro
    secrets:
      - psql-root-password
      - psql-authelia-password
      - psql-lldap-password
    environment:
      POSTGRES_USER: rachel
      POSTGRES_PASSWORD_FILE: /run/secrets/psql-root-password
    ports: ['5432:5432']
    networks: [auth]
    healthcheck:
      test:
        - CMD-SHELL
        - PGPASSWORD=$$(cat $$POSTGRES_PASSWORD_FILE)
        - pg_isready
        - --username $${POSTGRES_USER}
        - --dbname $${POSTGRES_USER}
        - --no-password
    user: $UID:$GID
  lldap:
    <<: *defaults-nonet
    image: lldap/lldap:v0.6.1@sha256:4931eeeb841b1bbf5774161b5fd9dab88f41ffeb4b08ca656f0b7595cd7cb52a
    depends_on:
      traefik: {condition: service_started}
      postgres: {condition: service_healthy}
    volumes: [$APPDIR/lldap:/data]
    secrets:
      - lldap-psql-url
      - lldap-jwt
      - lldap-keyseed
      - lldap-adminpw
    environment:
      UID: $UID
      GID: $GID
      TZ: $TZ
      LLDAP_LDAP_BASE_DN: dc=rachelf42,dc=ca
      LLDAP_JWT_SECRET_FILE: /run/secrets/lldap-jwt
      LLDAP_KEY_SEED_FILE: /run/secrets/lldap-keyseed
      LLDAP_LDAP_USER_PASS_FILE: /run/secrets/lldap-adminpw
      LLDAP_DATABASE_URL_FILE: /run/secrets/lldap-psql-url
    ports: # open for terraform
      - '3890:3890'
      - '17170:17170'
    networks: [auth]
    labels:
      traefik.enable: true
      traefik.http.routers.lldap.tls: true
      traefik.http.routers.lldap.tls.certresolver: cloudflare
      traefik.http.routers.lldap.entrypoints: websecure
      traefik.http.routers.lldap.rule: Host(`lldap.local.rachelf42.ca`)
      traefik.http.services.lldap-control.loadbalancer.server.port: 17170
  redis:
    <<: *defaults-nonet
    image: bitnami/redis:8.0.2@sha256:d0f84da5011d75e3cda5516646ceb4ce6fa1eac50014c7090472af1f5ae80c91
    volumes: [$APPDIR/redis:/bitnami]
    secrets: [redis-password]
    environment: {REDIS_PASSWORD_FILE: /run/secrets/redis-password}
    networks: [auth]
    healthcheck: !reset {}
    user: $UID:$GID
  authelia:
    <<: *defaults-nonet
    image: authelia/authelia:4.39.4@sha256:64b356c30fd817817a4baafb4dbc0f9f8702e46b49e1edb92ff42e19e487b517
    depends_on:
      postgres: {condition: service_healthy}
      lldap: {condition: service_healthy}
      redis: {condition: service_started}
      traefik: {condition: service_started}
    volumes:
      - $APPDIR/authelia:/config
      - ./config/authelia.yaml:/config/configuration.yml:ro
    secrets:
      - redis-password
      - psql-authelia-password
      - authelia-jwt
      - authelia-ldap-password
      - authelia-session-secret
      - authelia-storage-key
    environment:
      AUTHELIA_IDENTITY_VALIDATION_RESET_PASSWORD_JWT_SECRET_FILE: /run/secrets/authelia-jwt
      AUTHELIA_AUTHENTICATION_BACKEND_LDAP_PASSWORD_FILE: /run/secrets/authelia-ldap-password
      AUTHELIA_SESSION_SECRET_FILE: /run/secrets/authelia-session-secret
      AUTHELIA_STORAGE_ENCRYPTION_KEY_FILE: /run/secrets/authelia-storage-key
      AUTHELIA_SESSION_REDIS_PASSWORD_FILE: /run/secrets/redis-password
      AUTHELIA_STORAGE_POSTGRES_PASSWORD_FILE: /run/secrets/psql-authelia-password
    networks: [auth]
    labels:
      traefik.enable: true
      traefik.http.routers.authelia.tls: true
      traefik.http.routers.authelia.tls.certresolver: cloudflare
      traefik.http.routers.authelia.entrypoints: websecure
      traefik.http.routers.authelia.rule: Host(`auth.local.rachelf42.ca`)
########## HOUSEKEEPING
secrets:
  cf-token: {file: ./secrets/cf-token}
  psql-root-password: {file: ./secrets/psql-root-password}
  psql-authelia-password: {file: ./secrets/psql-authelia-password}
  psql-lldap-password: {file: ./secrets/psql-lldap-password}
  lldap-psql-url: {file: ./secrets/lldap-psql-url}
  lldap-jwt: {file: ./secrets/lldap-jwt}
  lldap-keyseed: {file: ./secrets/lldap-keyseed}
  lldap-adminpw: {file: ./secrets/lldap-adminpw}
  redis-password: {file: ./secrets/redis-password}
  authelia-ldap-password: {file: ./secrets/authelia-ldap-password}
  authelia-jwt: {file: ./secrets/authelia-jwt}
  authelia-session-secret: {file: ./secrets/authelia-session-secret}
  authelia-storage-key: {file: ./secrets/authelia-storage-key}