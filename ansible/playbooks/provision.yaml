- name: waiting on SSH
  gather_facts: false
  hosts: [all]
  any_errors_fatal: true
  tasks:
    - ansible.builtin.wait_for_connection:
        timeout: 3600
        sleep: 10
- name: user account setup
  become: true
  hosts: [vm, lxc, pve]
  any_errors_fatal: true
  tasks:
    - name: sudo installed
      register: sudo
      until: sudo is ansible.builtin.success
      async: 600
      poll: 10
      retries: 10
      ansible.builtin.apt:
        name: sudo
        state: present
        update_cache: true
    - name: acl installed # required for ansible.builtin.sudo to become non-root
      register: acl
      until: acl is ansible.builtin.success
      async: 600
      poll: 10
      retries: 10
      ansible.builtin.apt:
        name: acl
        state: present
        update_cache: true
    - name: user account exists
      ansible.builtin.user:
        name: "{{ user_name }}"
        state: present
        password: "{{ user_password_hash }}"
        uid: 1000
        create_home: true
        move_home: true
        home: "{{ homedir }}"
        append: true
        groups: [sudo]
        shell: /bin/bash
    - name: authorized keys synced - regular user
      ansible.posix.authorized_key:
        user: rachel
        key: https://github.com/{{ account_name }}.keys
        state: present
    - name: authorized keys synced - root user
      ansible.builtin.copy:
        src: "{{ homedir }}/.ssh/authorized_keys"
        dest: /root/.ssh/authorized_keys
        remote_src: true
        owner: root
        group: root
        mode: "0664"
    - name: repo pulling key synced - regular user
      become: true
      become_user: rachel
      ansible.builtin.copy:
        src: "{{ homedir }}/.ssh/id_ed25519"
        dest: "{{ homedir }}/.ssh/id_ed25519"
        remote_src: false
        mode: "0600"
    - name: repo pulling key synced - root user
      ansible.builtin.copy:
        src: "{{ homedir }}/.ssh/id_ed25519"
        dest: /root/.ssh/id_ed25519
        remote_src: false
        owner: root
        group: root
        mode: "0600"
    - name: sudoer declaration in place
      community.general.sudoers:
        name: "{{ account_name }}"
        state: present
        user: "{{ user_name }}"
        commands: ALL
        nopassword: true
- name: ubuntu specific config
  hosts: [ubuntu]
  become: true
  any_errors_fatal: true
  tasks:
    - name: yeet motd - helptext
      ansible.builtin.file:
        path: /etc/update-motd.d/10-help-text
        state: absent
    - name: yeet motd - canonical ads
      ansible.builtin.file:
        path: /etc/update-motd.d/50-motd-news
        state: absent
    - name: yeet snapd
      block:
        - name: purge snapd
          register: snapd
          until: snapd is ansible.builtin.success
          async: 600
          poll: 10
          retries: 10
          ansible.builtin.apt:
            name: snapd
            state: absent
            purge: true
            allow_change_held_packages: true # cause a failed run might have left it installed but marked held
        - name: prevent snapd install - by system
          when: snapd is ansible.builtin.changed
          changed_when: snapd is ansible.builtin.changed
          check_mode: false # noqa: no-handler
          ansible.builtin.command: apt-mark hold snapd
        - name: prevent snapd install - by users
          ansible.builtin.copy:
            dest: /etc/apt/preferences.d/00-fuck-snapd
            content: |
              Package: snapd
              Pin: release *
              Pin-Priority: -1
            owner: root
            group: root
            mode: "0644"
- name: server-only config
  become: true
  hosts: [server]
  any_errors_fatal: true
  tasks:
    - name: install trash-cli
      register: trash
      until: trash is ansible.builtin.success
      async: 600
      poll: 10
      retries: 10
      ansible.builtin.apt:
        name: trash-cli
        state: present
        update_cache: true
    - name: bashrc alias for trash
      ansible.builtin.blockinfile:
        path: "{{ homedir }}/.bashrc"
        marker: "# {mark} ANSIBLE SERVER BLOCK"
        state: present
        block: alias rm='echo "use trash, dummy"; tput bel; false'
- name: docker setup
  become: true
  hosts: [docker]
  any_errors_fatal: true
  vars:
    deb_arch:
      armv6l: armhf,
      armv7l: armhf,
      aarch64: arm64,
      x86_64: amd64,
      i386: i386
    badpkg:
      - docker.io
      - docker-doc
      - docker-compose
      - docker-compose-v2
      - containerd
      - runc
    dockerpkg:
      - acl # cause we may run this task on a device that doesn't need the user setup
      - containerd.io
      - docker-buildx-plugin
      - docker-ce
      - docker-ce-cli
      - docker-compose-plugin
  tasks:
    - name: unofficial packages purged
      register: dockerpurge
      until: dockerpurge is ansible.builtin.success
      async: 600
      poll: 10
      retries: 10
      ansible.builtin.apt:
        name: "{{ badpkg }}"
        state: absent
        purge: true
    - name: repo dependencies installed
      register: dockerapt
      until: dockerapt is ansible.builtin.success
      async: 600
      poll: 10
      retries: 10
      ansible.builtin.apt:
        name: [ca-certificates, curl]
        state: present
    - name: repo setup
      block:
        - name: directory exists
          ansible.builtin.file:
            path: /etc/apt/keyrings
            mode: "0755"
            state: directory
        - name: key downloaded
          ansible.builtin.get_url:
            url: https://download.docker.com/linux/ubuntu/gpg
            dest: /etc/apt/keyrings/docker.asc
            mode: "0664"
            owner: root
            group: root
        - name: apt source installed
          ansible.builtin.apt_repository:
            filename: docker
            repo: >-
              deb [arch={{ deb_arch[ansible_architecture] }}
              signed-by=/etc/apt/keyrings/docker.asc]
              https://download.docker.com/linux/ubuntu
              {{ ansible_distribution_release }} stable
            state: present
    - name: packages installed
      register: dockerinst
      until: dockerinst is ansible.builtin.success
      async: 600
      poll: 10
      retries: 10
      ansible.builtin.apt:
        name: "{{ dockerpkg }}"
        state: present
        update_cache: true
    - name: bashrc aliases
      ansible.builtin.blockinfile:
        path: "{{ homedir }}/.bashrc"
        marker: "# {mark} ANSIBLE DOCKER BLOCK"
        state: present
        block: |
          alias dc='docker compose'
          alias dclean='docker system prune --volumes'
          alias dcup='docker compose up -d --remove-orphans'
    - name: get dockers gid
      register: getent       # gid is in getent.stdout
      check_mode: false      # i know there is a getent module but ehhhhh
      changed_when: false    # i dont wanna learn how to get the info out of that database return variable
      ansible.builtin.shell: # i just need the one thing and awk can pull it easy enough
        executable: /bin/bash
        cmd: |
          set -o pipefail
          getent group docker | awk -F: '{print $3}'
    - name: environment variables set
      ansible.builtin.blockinfile:
        path: /etc/environment
        marker: "# {mark} ANSIBLE BLOCK"
        state: present
        block: |
          TZ="America/Vancouver"
          HL_REPO="{{ repodir }}"
          HOMELABDIR="{{ repodir }}"
          DOCKER_GID={{ getent.stdout }}
          DOCKER_USER="{{ user_name }}"
          COMPOSE_FILE="{{ repodir }}/docker/{{ inventory_hostname }}.compose.yaml"
    - name: add user to docker group
      ansible.builtin.user:
        name: "{{ user_name }}"
        state: present
        append: true
        groups: docker
    - name: docker logged in
      become: true
      become_user: "{{ user_name }}"
      community.docker.docker_login:
        username: "{{ account_name }}"
        password: "{{ lookup('ansible.builtin.file', '../resources/docker-pat') }}"
        state: present
    - name: NAS mountpoints
      block:
        - name: parent dir
          ansible.builtin.file:
            path: /mount/nas
            state: directory
            owner: root
            group: root
            mode: "0777"
        - name: docker bindmount dir
          ansible.builtin.file:
            path: /mount/nas/appdata
            state: directory
            owner: root
            group: root
            mode: "0777"
        - name: media library dir
          ansible.builtin.file:
            path: /mount/nas/media
            state: directory
            owner: root
            group: root
            mode: "0777"
    - name: NAS fstab
      ansible.builtin.debug:
        msg: "TODO: ansible.posix.mount here"
- name: dev machine setup
  become: true
  become_user: "{{ user_name }}"
  hosts: [devmachine]
  tasks:
    - name: bin directory exists
      ansible.builtin.file:
        path: "{{ homedir }}/bin"
        state: directory
        mode: "0775"
    - name: deploy.sh linked
      ansible.builtin.file:
        path: "{{ homedir }}/bin/homelab-deploy"
        src: "{{ repodir }}/scripts/deploy.sh"
        state: link
    - name: lint.sh linked
      ansible.builtin.file:
        path: "{{ homedir }}/bin/homelab-lint"
        src: "{{ repodir }}/scripts/lint.sh"
        state: link
    - name: beep-controller.sh linked
      ansible.builtin.file:
        path: "{{ homedir }}/bin/beeps"
        src: "{{ repodir }}/scripts/beep-controller.sh"
        state: link
    - name: bashrc stuff
      ansible.builtin.blockinfile:
        path: "{{ homedir }}/.bashrc"
        marker: "# {mark} ANSIBLE DEVMACHINE BLOCK"
        state: present
        block: |
          export EDITOR="nano"
          export ANSIBLE_NOCOWS=1
          export ANSIBLE ANSIBLE_VAULT_PASSWORD_FILE="~/.ansiblepw"
          export LESS="R" # dont trim out colour control characters
          alias nomad="export NOMAD_TOKEN=$(vault read -field='secret_id' nomad/creds/mgmt) && nomad"
          alias sshagent='eval `ssh-agent -s`'
          function mkcd() {
              mkdir $1
              cd $1
          }
- name: finishing up
  become: true
  hosts: [debian, ubuntu]
  any_errors_fatal: true
  tasks:
    - name: bashrc - reg user
      ansible.builtin.blockinfile:
        path: "{{ homedir }}/.bashrc"
        marker: "# {mark} ANSIBLE GENERAL BLOCK"
        state: present
        block: |
          force_color_prompt=yes
          export PS1='[$?] \[\e[32m\]\u\[\e[m\]\[\e[32m\]@\[\e[m\]\[\e[32m\]\h\[\e[m\]:\[\e[35m\]\w\[\e[m\] \\$> '
          export PATH="$PATH:$HOME/bin"
    - name: bashrc - skeleton user
      ansible.builtin.blockinfile:
        path: /etc/skel/.bashrc
        marker: "# {mark} ANSIBLE GENERAL BLOCK"
        state: present
        block: |
          force_color_prompt=yes
          export PS1='[$?] \[\e[33\]\u\[\e[m\]\[\e[33\]@\[\e[m\]\[\e[33\]\h\[\e[m\]:\[\e[35m\]\w\[\e[m\] \\$> '
    - name: bashrc - root user
      ansible.builtin.blockinfile:
        path: /root/.bashrc
        marker: "# {mark} ANSIBLE GENERAL BLOCK"
        state: present
        block: |
          force_color_prompt=yes
          export PS1='[$?] \[\e[31m\]\u\[\e[m\]\[\e[31m\]@\[\e[m\]\[\e[31m\]\h\[\e[m\]:\[\e[35m\]\w\[\e[m\] \\$> '
    - name: nanorc file
      loop: ["{{ homedir }}/.nanorc", /root/.nanorc, /etc/skel/.nanorc]
      ansible.builtin.file:
        path: "{{ item }}"
        state: touch
        owner: root
        group: root
        mode: "0644"
    - name: nanorc permissions
      ansible.builtin.file:
        path: "{{ homedir }}/.nanorc"
        state: file
        owner: "{{ user_name }}"
        group: "{{ user_name }}"
        mode: "0644"
    - name: nanorc content
      loop: ["{{ homedir }}/.nanorc", /root/.nanorc, /etc/skel/.nanorc]
      ansible.builtin.blockinfile:
        path: "{{ item }}"
        marker: "# {mark} ANSIBLE BLOCK"
        state: present
        # yamllint disable rule:line-length
        block: |
          set autoindent
          set tabsize 4
          set tabstospaces
          ## adapted from https://github.com/scopatz/nanorc/blob/master/sh.nanorc
          syntax "SH" "\.sh$" "\.ash" "\.bashrc" "bashrc" "\.bash_aliases" "bash_aliases" "\.bash_functions" "bash_functions" "\.bash_login" "\.bash_logout" "\.bash_profile" "bash_profile" "\.profile" "revise\..+$"
          header "^#!.*/(env +)?(ba|da|a)?sh( |$)"
          tabgives '\t'
          comment "#"
          color green "\<(case|do|done|elif|else|esac|fi|for|function|if|in|select|then|time|until|while)\>"
          color green "(\{|\}|\(|\)|\;|\]|\[|`|\\|\$|<|>|!|=|&|\|)"
          color green "-[Ldefgruwx]\>"
          color green "-(eq|ne|gt|lt|ge|le|s|n|z)\>"
          color brightblue "\<(alias|bg|bind|break|builtin|caller|cd|command|compgen|complete|compopt|continue|declare|dirs|disown|echo|enable|eval|exec|exit|export|false|fc|fg|getopts|hash|help|history|jobs|kill|let|local|logout|mapfile|popd|printf|pushd|pwd|read|readarray|readonly|return|set|shift|shopt|source|suspend|test|times|trap|true|type|typeset|ulimit|umask|unalias|unset|wait|cat|chmod|chown|cp|env|grep|install|ln|make|mkdir|mv|rm|sed|tar|touch)\>"
          icolor brightgreen "^\s+[0-9A-Z_]+\s+\(\)"
          icolor brightred "\$\{?[0-9A-Z_!@#$*?-]+\}?"
          color brightyellow ""(\\.|[^"])*"" "'(\\.|[^'])*'"
          color cyan "(^|[[:space:]])#.*$"
          color ,green "[[:space:]]+$"
        # yamllint enable rule:line-length
    - name: set timezone
      community.general.timezone:
        name: America/Vancouver
    - name: apt upgrade
      register: upgrade
      until: upgrade is ansible.builtin.success
      async: 600
      poll: 10
      retries: 10
      ansible.builtin.apt:
        update_cache: true
        upgrade: safe
    - name: apt autoremove
      register: autorem
      until: autorem is ansible.builtin.success
      async: 600
      poll: 10
      retries: 10
      ansible.builtin.apt:
        autoremove: true
        autoclean: true