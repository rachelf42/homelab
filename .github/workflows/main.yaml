on: # yamllint disable-line rule:truthy
  push:
    branches: [main, renovate/*]
  pull_request:
    branches: [main]
jobs:
  lint:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - name: Move secret placeholders into place
        working-directory: ./secrets
        run: |
          mv placeholders/* .
          rmdir placeholders

      - name: Run ShellCheck - Scripts
        uses: Azbagheri/shell-linter@30a9cf3f6cf25c08fc98f10d7dc4167f7b5c0c00 # v0.8.0
        with:
          path: "./scripts"
      - name: Run ShellCheck - Git Hooks
        uses: Azbagheri/shell-linter@30a9cf3f6cf25c08fc98f10d7dc4167f7b5c0c00 # v0.8.0
        with:
          path: "./.githooks"

      - name: Install YAMLlint
        run: pip install yamllint
      - name: Run YAMLlint
        run: yamllint .

      - name: Setup HashiCorp Packer
        uses: hashicorp/setup-packer@1aa358be5cf73883762b302a3a03abd66e75b232 # v3.1.0
      - name: Placeholder SSH Key
        run: ssh-keygen -f ./secrets/ansible_ssh_key
      - name: Validate Packer
        working-directory: ./packer
        run: |
          packer init .
          packer validate .

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2

      - name: Validate Terraform - Main
        working-directory: ./terraform
        run: |
          terraform init -cloud=false
          terraform validate

      - name: Validate Terraform - Bootstrap
        working-directory: ./bootstrap
        run: |
          terraform init -cloud=false
          terraform validate

      - name: Validate Terraform - Poststrap
        working-directory: ./bootstrap/postdeploy
        run: |
          terraform init -cloud=false
          terraform validate

      - name: Run Ansible-Lint
        uses: ansible/ansible-lint@9765b8704b2c3f4ab782815b528e0393662e1c04 # v25.7.0
        env:
          ANSIBLE_VAULT_PASS: SuperSecureSecretPassword
        with:
          gh_action_ref: v25.4.0
          working_directory: ./ansible
          requirements_file: requirements.yaml

      - name: Run Docker-Compose-Lint
        run: npx dclint ./docker/*.compose.yaml --max-warnings 0
  deploy:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    needs: lint
    if: github.event_name == 'push' && github.event.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed
        run: >-
          echo "changed_files=$(git diff --name-only
          ${{ github.event.before }} ${{ github.event.after }}
          | xargs)" >> $GITHUB_OUTPUT
      - name: Check if only skippable files in commit
        id: onlySkippableFiles
        run: |
          #!/bin/bash
          CHANGED="${{ steps.changed.outputs.changed_files }}"
          for file in $(echo "$CHANGED" | xargs); do
            if [[ "$file" =~ ^.github/workflows/(.*)\.yaml ]]; then
              echo "$file matches .github rule"
            elif [[ "$file" =~ .md$ ]]; then
              echo "$file matches markdown rule"
            else
              echo "$file matches no rules"
              echo "result=false" >> "$GITHUB_OUTPUT"
              exit
            fi
          done
          echo "no more files, all files must match"
          echo "result=true" >> "$GITHUB_OUTPUT"

      - name: Check if Jenkins should be notified
        id: doJenkins
        run: |
          MSG='${{ github.event.head_commit.message }}'
          if [[ $MSG == *"nojenkins"* ]]; then
            echo "result=false" >> "$GITHUB_OUTPUT"
            echo "nope, message includes nojenkins"
          elif [[ ${{ steps.onlySkippableFiles.outputs.result }} == "true" ]]; then
            echo "result=false" >> "$GITHUB_OUTPUT"
            echo "nope, steps.onlySkippableFiles reports true"
          else
            echo "result=true" >> "$GITHUB_OUTPUT"
            echo "YES!"
          fi

      - name: Fire Jenkins Webhook
        if: steps.doJenkins.outputs.result == 'true'
        env:
          JENKINS_HOOK_TOKEN: ${{ secrets.JENKINS_HOOK_TOKEN }}
          JENKINS_HOOK_URL: ${{ secrets.JENKINS_HOOK_URL }}
        run: bash ./scripts/triggerJenkinsBuild.sh main
