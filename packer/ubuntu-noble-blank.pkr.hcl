# Adapted from gh:christianlempa/boilerplates
# Variable Definitions
variable "proxmox_default_node" { type = string }
variable "proxmox_api_url" { type = string }
variable "proxmox_api_token_id" { type = string }
variable "proxmox_api_token_secret" {
  type      = string
  sensitive = true
}
variable "proxmox_storage" {
  type    = string
  default = "local-lvm"
}
variable "proxmox_iso_storage" {
  type    = string
  default = "local"
}
variable "proxmox_template_id" {
  type    = number
  default = 9000
}
variable "proxmox_is_insecure" {
  type    = bool
  default = true
}
# Packer Meta-Settings
packer {
  required_version = "~> 1.12" # TODO https://github.com/renovatebot/renovate/issues/8178
                               # Issue URL: https://github.com/rachelf42/homelab/issues/20
  required_plugins {
    name = {
      version = "~> 1.2, >=1.2.2"
      source  = "github.com/hashicorp/proxmox"
    }
  }
}

# Resource Definiation for the VM Template
source "proxmox-iso" "ubuntu-server-noble" {

  # Proxmox Connection Settings
  proxmox_url              = "${var.proxmox_api_url}"
  username                 = "${var.proxmox_api_token_id}"
  token                    = "${var.proxmox_api_token_secret}"
  insecure_skip_tls_verify = "${var.proxmox_is_insecure}"

  # VM General Settings
  node                 = "${var.proxmox_default_node}"
  vm_id                = "${var.proxmox_template_id}"
  vm_name              = "ubuntu-server-noble"
  tags                 = "packer-template"
  template_description = "Ubuntu Noble Cloud-Init Template (Generated by Hashicorp Packer)"

  # VM Boot ISO Settings
  # see the ../bootstrap directory
  boot_iso {
    iso_file = "${var.proxmox_iso_storage}:iso/ubuntu-noble-autoinstall.iso"
    unmount  = true
  }

  # VM System Settings
  qemu_agent = true

  # VM Hard Disk Settings
  scsi_controller = "virtio-scsi-single"

  disks {
    disk_size    = "32G"
    format       = "raw"
    storage_pool = "${var.proxmox_storage}"
    type         = "scsi"
  }

  # VM CPU Settings
  cores = "1"

  # VM Memory Settings
  memory = "2048"

  # VM Network Settings
  network_adapters {
    model    = "virtio"
    bridge   = "vmbr0"
    firewall = "false"
  }

  # VM Cloud-Init Settings
  cloud_init              = true
  cloud_init_storage_pool = "local-lvm"

  # iso script means we just need to wait for it to reboot
  # boot_command = ["<wait>"]
  boot      = "order=scsi0;ide2;net0"
  boot_wait = "10s"

  communicator         = "ssh"
  ssh_username         = "ansible"
  ssh_private_key_file = "./ansible_ssh_key"
  ssh_timeout          = "60m"
  ssh_pty              = true
}

# Build Definition to create the VM Template
build {
  sources = ["source.proxmox-iso.ubuntu-server-noble"]

  # Cloud-Init + Machine-Specific Config Cleaning
  provisioner "shell" {
    inline = [
      "while [ ! -f /var/lib/cloud/instance/boot-finished ]; do echo 'Waiting for cloud-init...'; date; sleep 1; done",
      "sudo rm /etc/ssh/ssh_host_*",
      "sudo truncate -s 0 /etc/machine-id",
      "sudo apt -y autoremove --purge",
      "sudo apt -y clean",
      "sudo apt -y autoclean",
      "sudo cloud-init clean",
      "sudo rm -f /etc/cloud/cloud.cfg.d/subiquity-disable-cloudinit-networking.cfg",
      "sudo rm -f /etc/netplan/00-installer-config.yaml"
    ]
  }

  # Required for PVE Cloud-Init Integration
  provisioner "shell" {
    inline = ["echo 'datasource_list: [ConfigDrive, NoCloud]' | sudo tee /etc/cloud/cloud.cfg.d/99-pve.cfg"]
  }
}
